- name: Allow Git to access /var/www/html safely
  command: git config --global --add safe.directory /var/www/html

- name: Check if webapp directory exists
  stat:
    path: "{{ webapp_dir }}"
  register: webapp_dir_stat

- name: Check if composer.lock exists in webapp_dir
  stat:
    path: "{{ webapp_dir }}/composer.lock"
  register: composer_lock_stat
  when: webapp_dir_stat.stat.exists

- name: Remove existing directory if it is not a Laravel app
  file:
    path: "{{ webapp_dir }}"
    state: absent
  when: webapp_dir_stat.stat.exists and not composer_lock_stat.stat.exists

- name: Clone Tambang-Media WebApp
  git:
    repo: "{{ github_webapp_repo }}"
    clone: yes
    update: no
    force: yes
    dest: "{{ webapp_dir }}"

- name: Install composer dependancies
  command:  composer install --no-interaction --prefer-dist
  args:
    chdir: "{{ webapp_dir }}"
  environment:
    COMPOSER_ALLOW_SUPERUSER: 1

- name: Copy .env.example to .env
  copy:
    src: "{{ webapp_dir }}/.env.example"
    dest: "{{ webapp_dir }}/.env"
    remote_src: yes

- name: Set Laravel environment
  ansible.builtin.lineinfile:
    path: "{{ webapp_dir }}/.env"
    regexp: '^{{ item.key }}='
    line: "{{ item.key }}={{ item.value }}"
  loop:
    - { key: APP_ENV, value: production }
    - { key: APP_KEY, value: "" }
    - { key: APP_DEBUG, value: false }
    - { key: APP_URL, value: "http://{{ ansible_host }}" }
    - { key: DB_DATABASE, value: "{{ mysql_database }}" }
    - { key: DB_USERNAME, value: "{{ mysql_username }}" }
    - { key: DB_PASSWORD, value: "{{ mysql_password }}" }

- name: Generate Laravel app key
  command: php artisan key:generate
  args:
    chdir: "{{ webapp_dir }}"

- name: Set correct permissions for storage and bootstrap/cache
  file:
    path: "{{ item }}"
    state: directory
    recurse: yes
    owner: www-data
    group: www-data
    mode: '0775'
  loop:
    - "{{ webapp_dir }}/storage"
    - "{{ webapp_dir }}/bootstrap/cache"

- name: Clear and run Laravel migrations
  shell: |
    php artisan config:clear -y
    php artisan cache:clear -y
    php artisan migrate --seed --force
    php artisan db:seed --class=DummySeeder --force
  args:
    chdir: "{{ webapp_dir }}"

- name: Install frontend dependencies
  npm:
    path: "{{ webapp_dir }}"
    ci: true

- name: Build Vite assets
  shell: npm run build
  args:
    chdir: "{{ webapp_dir }}"
